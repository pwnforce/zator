pragma circom 2.1.1;

include "./node_modules/circomlib-ml/circuits/Dense.circom";
include "./utils/mimcsponge.circom";

template TailLayer() {
    var inRows = 3136;
    var outCols = 10;

    signal input prevHash;
    signal input in[inRows];

    var activations[outCols] = [-28639993667, -34677528381, -21898008346, -19130430221, -40692321777, -30850053787, -43104949951, -6874659061, -25667932510, -25357667922];
    var bias[outCols] = [-16762316, 79053082, -54210544, -95354311, 56738410, -37802950, 4387544, 4411432, -51621947, -40832181];
    var weights[inRows][outCols] = [[-445888740720640, 1434787914973184, 56459958157312, -453873655349248, 735278335524864, 1116015643590656, -161697130086400, 181397054554112, -664570154713088, -1825560145690624, -3097258757193728, -2853006651424768, 1490400359481344, -1406978135949312, 2687097433489408, -1013345993883648, -536135298187264, -4733221463916544, -3631128560795648, 465857989836800, -1697141831499776, 3142436712873984, -4630088561721344, -4786751788810240, -2610143699140608, -46731140005888, 1033347925016576, -9655068227796992, -1169206196305920, 590391304781824, -3427369138257920, -2222055151894528], [-221404574253056, -2830997896822784, -875392248315904, -2214006651617280, 2483847501447168, -6772613669978112, -2324462875705344, -4916853327527936, 892538428850176, -5038284937887744, -3432075348672512, -2522172568371200, -3049374166810624, -11783149361037312, -2188563131138048, 2035396410081280, -3131758887305216, -2877338983333888, -4583474207916032, 500527100067840, -975310434598912, -3379567494430720, -3950465553268736, -5655073380106240, 2056849503289344, -3188339175849984, -11193548061802496, -2764448452313088, -4163785573007360, -3819931296595968, -10424817635295232, -788034425454592], [-929989201494016, -2651836557295616, 2026365167599616, 930617139134464, 194269943955456, -1062221178208256, 177379683074048, -469826304737280, -404425227108352, 1442722195963904, -2562627670638592, 58238213029888, -1763540817936384, -4927002335248384, -5690924545867776, -8336507899215872, 47425809022976, 952493219512320, 1469356361908224, 1831917905248256, 655188939505664, 665809319886848, -1462714597638144, -2028048928997376, -828407923343360, -1579001239830528, -2070363483668480, -1546575042052096, 228956334718976, -1526936169873408, -6237489735925760, -2185965883883520], [-3204803127672832, -1969480204812288, 735943317258240, -1663003283947520, 1968105546842112, -1513899333517312, 1182922040147968, -2886996217298944, -2187151026421760, -3695756544311296, 676593177460736, -1673172021673984, -1611182490255360, 1182368928890880, -299930551844864, 1673592391598080, 1098256826236928, 3211741915774976, -4245454376140800, 1000244665909248, -2216838243024896, -1267847636451328, -649521260396544, -1518086658195456, 406345077489664, -2377336070602752, 1822451126239232, -426304260276224, -879870020157440, -654890909040640, -2423297589379072, -1056021862678528], [892691369951232, -817220540170240, 15903995461632, 1193026084929536, -2211648580354048, 2351541302329344, 402315324424192, -236830570053632, -965000566931456, -1202648824938496, 908002794143744, -3933157908807680, -247598841593856, 971125995601920, -4175328297615360, -1529515029299200, -3254664208318464, -2330992299737088, -3217341747822592, -1423851183407104, -1186254397898752, -4193816521211904, -3032859480686592, 844821006647296, -1575862558261248, 548481215234048, 227435027103744, 3358255598272512, -1665073995055104, -4828837636472832, 797096538013696, -1710878076436480], [291710353539072, 1415893682749440, -2366562145140736, -923407365439488, 746602553671680, -1051089092739072, -1359653904580608, 911185767563264, -1101195858935808, -3380986444251136, 41396320862208, -501922997993472, -33491129466880, 865310819221504, 3386088060092416, 250271737315328, -569974909304832, 1722035461947392, -2807249948901376, -666795081990144, -1200310081028096, -1979093683798016, -2916796847882240, -3924938415144960, -1137987689644032, -2472842453057536, -2208461848838144, -7626462832099328, -603533636272128, -786568029667328, -2881471547179008, -29687344529408], [956642292137984, -767213564854272, -1709980294053888, -2415976817623040, -51706834452480, -852940172558336, 232992496680960, 2120730967801856, 1311705829212160, 1012446667997184, -5414261543141376, 1647245451591680, -4963720547532800, -725948257271808, -3928305937940480, -12608663550164992, 1791905318830080, -407887809609728, 1965198659289088, 827127955980288, 2746264097652736, 1879039065194496, -4545084716482560, -4192901693177856, -3550903671980032, 757665852555264, -8468464863805440, -115750064881664, -778770315214848, -31347104022528, -11919777639432192, -2329885003481088], [-2070780095496192, 976210096029696, -832174945206272, 632976979263488, -213340102066176, -411228019097600, -677809257185280, -2182446426619904, -4477991958609920, -2232157586063360, 1032726429827072, -2499827195707392, 2179679125504000, 243196885991424, -1851687237058560, 2825246398742528, 3687771126366208, -2452242984599552, -1975542014279680, -757553847861248, -141753181011968, -1698535951040512, -6970658906963968, -841230883749888, -1856348618752000, -3102183205634048, 834698708254720, -4814004430045184, -74035639615488, -3586145489256448, 5521413997854720, 582592113934336], [-452057622380544, 218012221177856, -507918906556416, -566787104047104, -1337118748049408, 2249024593723392, 456445770334208, -678104133533696, -4771900865642496, -394278501089280, -20622635696128, 415102616469504, -81917886070784, -1843704637685760, -1270960682434560, 585931383898112, -2244073838608384, -5338876814032896, -1250106737164288, -713825242316800, -2495809522237440, -4478908397256704, 3746167112335360, -807203401367552, -1248431163047936, 989283506716672, 1335906761965568, -2374124240371712, -1662884501258240, -1678299138883584, -788437615509504, -517280391757824], [-580741922553856, 619461186945024, -143987788742656, -348876066258944, -3110564029005824, 1610750443388928, -929589635317760, -15767379640320, -4197396913324032, -1822399183978496, 3223845938921472, -2379517108682752, -467203187015680, 78672149086208, -4248904040185856, 296616011497472, -615758992244736, -3972471623516160, -2732718844542976, -2238003304988672, -711776006045696, -5341050604355584, -1130039047356416, 3340725420818432, -2200865662304256, -819574517792768, 1113419268751360, 2772433601822720, -1294475359944704, -5751383189880832, 1982558648664064, 38097844699136]];

    signal output finalHash;

    // LOGIC
    // 1. Check hash of activation from prev layer matches hash of input to this layer
    component mimc_previous_activations = MiMCSponge(inRows, 220, 1);
    mimc_previous_activations.ins <== in;
    mimc_previous_activations.k <== 0;
    
    prevHash === mimc_previous_activations.outs[0];

    // 2. Compute product Ax + b
    component dense = Dense(inRows, outCols);
    dense.in <== in;
    dense.weights <== weights;
    dense.bias <== bias;

    signal result[outCols];
    for (var i = 0; i < outCols; i++) {
        result[i] <== dense.out[i];
    }

    // 3. Compute hash of result
    component mimc_hash_activations = MiMCSponge(outCols, 220, 1);
    mimc_hash_activations.ins <== result;
    mimc_hash_activations.k <== 0;
    finalHash <== mimc_hash_activations.outs[0];
}

component main { public [prevHash, in] } = TailLayer();